# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to include the cache and path variables, but
#  exclude the XML files.
.idea/
*.iws
*.iml
*.ipr

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# GEPA Project Specific
# =====================

# API keys and secrets
.env
.env.local
.env.production
.env.staging
*.key
secrets.json
config/secrets/

# Log files
*.log
logs/
gepa_test.log
optimization.log

# Cache directories
cache/
.cache/
__pycache__/

# Data files (keep structure but ignore large datasets)
data/*.parquet
data/*.csv
data/*.json
data/large_datasets/
data/downloads/
!data/example_*.json
!data/README.md

# Model outputs and results
results/
outputs/
models/
checkpoints/
experiments/

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Backup files
*.bak
*.backup
*~

# OS generated files
.DS_Store?
ehthumbs.db
Icon?

# Editor files
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
.idea/
*.sublime-*

# Python virtual environments
venv/
.venv/
env/
.env/

# uv specific
.uv_cache/
uv.lock

# Jupyter notebooks checkpoints
.ipynb_checkpoints/

# Testing artifacts
.pytest_cache/
.coverage
htmlcov/
.tox/

# Documentation builds
docs/_build/
site/

# Local configuration overrides
config/local.json
local_config.py

# Performance profiling
*.prof
profile_output/

# Database files
*.db
*.sqlite
*.sqlite3

# Compiled extensions
*.so
*.dll
*.dylib

# Package files
*.tar.gz
*.zip
*.rar

# IDE and editor specific
.fleet/
.vscode/
.idea/
*.swp
*.swo

# Machine learning specific
wandb/
mlruns/
.mlflow/

# Large files that should use Git LFS
*.pkl
*.pickle
*.h5
*.hdf5
*.npy
*.npz

# Local overrides
local/
scratch/
playground/

logs/*